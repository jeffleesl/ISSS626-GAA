{
  "hash": "9c750c8ee72a27b70f0cc4e62e223519",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 3a: Modelling Geography of Financial Inclusion with Geographically Weighted Methods\"\nauthor: \"Jeffrey Lee Shao Lin\"\ndate: \"Oct 28 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true  #will not re-render all items\n  message: false #no warning messages go out\n---\n\n\n# 1. Introduction\n\nAccording to [Wikipedia](https://en.wikipedia.org/wiki/Financial_inclusion), **financial inclusion** is the availability and equality of opportunities to access financial services. It refers to processes by which individuals and businesses can access appropriate, affordable, and timely financial products and services - which include banking, loan, equity, and insurance products. It provides paths to enhance inclusiveness in economic growth by enabling the unbanked population to access the means for savings, investment, and insurance towards improving household income and reducing income inequality.\n\n# 2. The Task\n\nIn this take-home exercise, we are required to build an explanatory model to determine factors affecting financial inclusion by using geographical weighted regression methods.\n\n# 3. The Data\n\nFor the purpose of this take-home exercise, two data sets shall be used, they are:\n\n-   [FinScope Uganda 2023](https://fsduganda.or.ug/data-sets-finscope-uganda-2023-survey-report/)\n\n-   The district level boundary GIS data can be downloaded from [geoBoundaries](https://www.geoboundaries.org/) portal\n\n# 4. Importing Packages\n\nBefore we start the exercise, we will need to import necessary R packages first. We will use the following packages:\n\n-   [**olsrr**](https://olsrr.rsquaredacademy.com/) package for building OLS and performing diagnostics tests\n\n-   [**GWmodel**](https://cran.r-project.org/web/packages/GWmodel/index.html) package for calibrating geographical weighted family of models\n\n-   [**corrplot**](https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html) package for multivariate data visualisation and analysis\n\n-   [sf](https://r-spatial.github.io/sf/index.html) package provides functions to manage, processing, and manipulate **Simple Features**, a formal geospatial data standard that specifies a storage and access model of spatial geometries such as points, lines, and polygons.\n\n-   [**tmap**](https://cran.r-project.org/web/packages/tmap/index.html) which provides functions for plotting cartographic quality static point patterns maps or interactive maps by using [leaflet](https://leafletjs.com/) API.\n\n\n    Use the code chunk below to install and launch the below R packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n```\n:::\n\n\n# 5. Getting the Data Into R Environment\n\n## 5.1 Importing geospatial data\n\nThe geospatial data used in this hands-on exercise is called geoBoundaries-UGA-ADM2. It is in ESRI shapefile format. The shapefile consists of Uganda district level boundaries. Polygon features are used to represent these geographic boundaries. The GIS data is in svy21 projected coordinates systems.\n\nThe code chunk below is used to import geoBoundaries-UGA-ADM2 shapefile by using st_read() of sf packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load district level boundary GIS data\n\nboundaries2 <- st_read(dsn = \"data/rawdata/geoBoundaries-UGA-ADM2-all\", \n                layer = \"geoBoundaries-UGA-ADM2\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `geoBoundaries-UGA-ADM2' from data source \n  `C:\\Users\\user\\OneDrive - Singapore Management University\\MITB\\6. Geospatial Analytics and Applications\\jeffleesl\\ISSS626-GAA\\Take-Home_Ex\\Take-Home_Ex03\\data\\rawdata\\geoBoundaries-UGA-ADM2-all' \n  using driver `ESRI Shapefile'\nSimple feature collection with 151 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 29.56838 ymin: -1.4732 xmax: 35.02676 ymax: 4.228399\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n## 5.1.1 Updating CRS Information\n\nUganda is located in southeast Africa between 1º S and 4º N latitude, and between 30º E and 35º E longitude. \n\nThe code chunk below updates the newly imported mpsz with the correct ESPG code (i.e. 32736).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform to the correct ESPG Code\n\nboundaries <- st_transform(boundaries2, 32736)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Verify the newly transformed boundaries\n\nst_crs(boundaries)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32736 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 36S\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 36S\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",33,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",10000000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 30°E and 36°E, southern hemisphere between 80°S and equator, onshore and offshore. Burundi. Eswatini (Swaziland). Kenya. Malawi. Mozambique. Rwanda. South Africa. Tanzania. Uganda. Zambia. Zimbabwe.\"],\n        BBOX[-80,30,0,36]],\n    ID[\"EPSG\",32736]]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_bbox(boundaries) #view extent\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      xmin       ymin       xmax       ymax \n  117997.3  9836930.8   725449.1 10467443.7 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(boundaries) +\n  tm_polygons()\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Convert to multipolygon to individual polygon\nboundaries_sf <- boundaries %>% \n  st_cast(\"POLYGON\") %>% \n  mutate(area = st_area(.))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in st_cast.sf(., \"POLYGON\"): repeating attributes for all\nsub-geometries for which they may not be constant\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Group by the unique name and select the largest polygon by area\nboundaries_cleaned <- boundaries_sf %>% \n  group_by(shapeName) %>% \n  filter(area == max(area)) %>% \n  ungroup() %>% \n  select(-area) %>% \n  select(shapeName) %>% \n  rename(\n  county_name = shapeName \n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(boundaries_cleaned) +\n  tm_polygons()\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex03_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## 5.2 Importing the aspatial data, FinScope Uganda \n\nThe FinScope-2023_Dataset_Final is in csv file format. The codes chunk below uses read_csv() function of readr package to import FinScope-2023_Dataset_Final into R as a tibble data frame called uganda_data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nuganda_data <- read_csv(\"data/rawdata/FinScope-2023_Dataset_Final.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 3176 Columns: 686\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (25): HH_ID, Interview_ID, ea_name, District, Region, Subregion, Rural_...\ndbl (638): ea_code, age, disabled, Pweight, Lhhid, Enum_code, InterviewDate,...\nlgl  (23): f3_2_14, f3_2_15, f3_3_14, f3_3_15, f3_5_14, f3_5_15, g12_2_1, g1...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n### 5.2.1 Variables to Consider for Financial Inclusion\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(uganda_data) # Displays all column names in the dataset\n```\n:::\n\n\nTo determine factors affecting financial inclusion, consider including the following types of variables:\n\n::: panel-tabset\n\n## Demographic Variables\n•\tAge and Age Band\n•\tGender\n•\tEducation Level\n•\tMobile User\n\n## Economic Variables\n•\tIncome Level\n•\tEmployment Status\n\n## Geographic Variables\n•\tUrban vs. rural status\n\n## Access Variables \n•\tDistance to nearest bank or financial institution from Home (Commerical Nank, SACCO and Mobile Money)\n\n## Financial Services Variables\n•\tFinancail Advice\n•\tSave Money and the channel (Commerical Nank, SACCO and Mobile Money)\n•\tLast amount saved\n•\tBorrow Money and the channel (Commerical Nank, SACCO and Mobile Money)\n•\tLast amount borrowed\n•\tLast amount sent\n•\tLast amount received\n\n## Other\n•\tDocumentation for KYC (National Identification Card, Passport, Utilities and Pay Slip)\n•\tSelf Sustaining\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nuganda_data_new <- uganda_data %>%\n  select(-c(2:4, 6:7, 9, 11:17, 20, 23:28, 30:34, 36:37, 40:43, 45:63, 65, 67:90, 93:94, 96, 98:167, 169:230, 232:234, 236:238, 240:241, 243:342, 344:364, 366:384, 386:438, 440:444, 446, 448:674, 677:679, 681:686)) %>% \n  rename(\n    age_band = c1,\n    gender = c2,\n    education_level = c4,\n    employment_status = c5,\n    mobile_user = c7_1_1,\n    national_ic_doc = c8_1a,\n    passport_doc = c8_1d,\n    utilities_bill_doc = c8_1e,\n    pay_slip_doc = c8_1j,\n    self_sustaining = e1_1,\n    financial_advice = e3_1,\n    save_money = f2_1,\n    save_money_commercial_bank = f3_1_1,\n    save_money_SACCO = f3_1_4,\n    save_money_mobile_money = f3_1_6,\n    last_amt_saved = f6_1,\n    last_amt_borrowed = g3_3,\n    borrow_money_commercial_bank = g6_1_1,\n    borrow_money_SACCO = g6_1_5,\n    borrow_money_mobile_money = g6_1_8,\n    last_amt_sent = hpp3_2,\n    last_amt_received = hpp6_2,\n    own_insurance = j1,\n    distance_commerical_bank = k1_1_1,\n    distance_SACCOS = k1_1_7,\n    distance_mobile_money = k1_1_9,\n    latitude = hh_gps_latitude,\n    longitude = hh_gps_longitude,\n    county_name = s1aq2b\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(uganda_data_new$longitude) #see the data in XCOORD column\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 33.65414 33.65328 33.65403 33.65586 33.65472 33.65549\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(uganda_data_new$latitude) #see the data in YCOORD column\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.677662 2.675690 2.673339 2.671343 2.671923 2.672423\n```\n\n\n:::\n:::\n\nNext, summary() of base R is used to display the summary statistics of uganda_data tibble data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(uganda_data_new)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    HH_ID                age            Region          Rural_Urban       \n Length:3176        Min.   : 16.00   Length:3176        Length:3176       \n Class :character   1st Qu.: 25.00   Class :character   Class :character  \n Mode  :character   Median : 34.00   Mode  :character   Mode  :character  \n                    Mean   : 37.86                                        \n                    3rd Qu.: 48.00                                        \n                    Max.   :100.00                                        \n                                                                          \n    age_band         gender      education_level employment_status\n Min.   :1.000   Min.   :1.000   Min.   :1.000   Min.   : 1.00    \n 1st Qu.:3.000   1st Qu.:1.000   1st Qu.:2.000   1st Qu.: 1.00    \n Median :4.000   Median :2.000   Median :3.000   Median : 2.00    \n Mean   :3.986   Mean   :1.552   Mean   :3.169   Mean   : 3.67    \n 3rd Qu.:5.000   3rd Qu.:2.000   3rd Qu.:4.000   3rd Qu.: 5.00    \n Max.   :7.000   Max.   :2.000   Max.   :9.000   Max.   :99.00    \n                                                                  \n  mobile_user    national_ic_doc  passport_doc  utilities_bill_doc\n Min.   :1.000   Min.   :1.000   Min.   :1.00   Min.   :1.000     \n 1st Qu.:1.000   1st Qu.:1.000   1st Qu.:2.00   1st Qu.:2.000     \n Median :1.000   Median :1.000   Median :2.00   Median :2.000     \n Mean   :1.273   Mean   :1.171   Mean   :1.96   Mean   :1.926     \n 3rd Qu.:2.000   3rd Qu.:1.000   3rd Qu.:2.00   3rd Qu.:2.000     \n Max.   :2.000   Max.   :2.000   Max.   :2.00   Max.   :2.000     \n                                                                  \n  pay_slip_doc   self_sustaining financial_advice   save_money  \n Min.   :1.000   Min.   :1.000   Min.   :1.000    Min.   :1.00  \n 1st Qu.:2.000   1st Qu.:2.000   1st Qu.:1.000    1st Qu.:1.00  \n Median :2.000   Median :2.000   Median :1.000    Median :1.00  \n Mean   :1.964   Mean   :1.846   Mean   :1.401    Mean   :1.36  \n 3rd Qu.:2.000   3rd Qu.:2.000   3rd Qu.:2.000    3rd Qu.:2.00  \n Max.   :2.000   Max.   :2.000   Max.   :2.000    Max.   :2.00  \n                                                                \n save_money_commercial_bank save_money_SACCO save_money_mobile_money\n Min.   :1.000              Min.   :1.000    Min.   :1.000          \n 1st Qu.:2.000              1st Qu.:2.000    1st Qu.:1.000          \n Median :2.000              Median :2.000    Median :2.000          \n Mean   :1.837              Mean   :1.842    Mean   :1.591          \n 3rd Qu.:2.000              3rd Qu.:2.000    3rd Qu.:2.000          \n Max.   :2.000              Max.   :2.000    Max.   :2.000          \n NA's   :1143               NA's   :1143     NA's   :1143           \n last_amt_saved  last_amt_borrowed borrow_money_commercial_bank\n Min.   :1.000   Min.   :  1.00    Min.   :1.000               \n 1st Qu.:1.000   1st Qu.:  1.00    1st Qu.:2.000               \n Median :1.000   Median :  2.00    Median :2.000               \n Mean   :2.198   Mean   : 88.72    Mean   :1.899               \n 3rd Qu.:3.000   3rd Qu.:  3.00    3rd Qu.:2.000               \n Max.   :9.000   Max.   :998.00    Max.   :2.000               \n NA's   :1143    NA's   :1877      NA's   :2629                \n borrow_money_SACCO borrow_money_mobile_money last_amt_sent   \n Min.   :1.00       Min.   :1.000             Min.   :  1.00  \n 1st Qu.:2.00       1st Qu.:2.000             1st Qu.:  1.00  \n Median :2.00       Median :2.000             Median :  1.00  \n Mean   :1.87       Mean   :1.832             Mean   : 65.63  \n 3rd Qu.:2.00       3rd Qu.:2.000             3rd Qu.:  2.00  \n Max.   :2.00       Max.   :2.000             Max.   :998.00  \n NA's   :2629       NA's   :2629              NA's   :1762    \n last_amt_received own_insurance   distance_commerical_bank distance_SACCOS\n Min.   :  1.00    Min.   :1.000   Min.   :1.000            Min.   :1.000  \n 1st Qu.:  1.00    1st Qu.:2.000   1st Qu.:2.000            1st Qu.:2.000  \n Median :  1.00    Median :2.000   Median :4.000            Median :2.000  \n Mean   : 80.83    Mean   :1.974   Mean   :3.176            Mean   :2.508  \n 3rd Qu.:  3.00    3rd Qu.:2.000   3rd Qu.:4.000            3rd Qu.:4.000  \n Max.   :998.00    Max.   :2.000   Max.   :4.000            Max.   :4.000  \n NA's   :1489                                                              \n distance_mobile_money    latitude         longitude     county_name       \n Min.   :1.000         Min.   :-1.4128   Min.   : 0.00   Length:3176       \n 1st Qu.:1.000         1st Qu.: 0.2393   1st Qu.:30.99   Class :character  \n Median :1.000         Median : 0.7726   Median :32.54   Mode  :character  \n Mean   :1.655         Mean   : 0.9945   Mean   :31.53                     \n 3rd Qu.:2.000         3rd Qu.: 1.9143   3rd Qu.:33.52                     \n Max.   :4.000         Max.   : 3.6876   Max.   :34.96                     \n                                                                           \n```\n\n\n:::\n:::\n\n\n## 5.3 Converting aspatial data frame into a sf object\n\nCurrently, the uganda_data tibble data frame is aspatial. We will convert it to a sf object. The code chunk below converts uganda_data data frame into a simple feature data frame by using st_as_sf() of sf packages.\n\n\n::: {.cell}\n\n:::",
    "supporting": [
      "Take-Home_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}