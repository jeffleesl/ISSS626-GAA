{
  "hash": "eb169787c0c6c59d295de8d773b6b4a9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 8: Supplement to Hands-on Exercise 8\"\nauthor: \"Jeffrey Lee Shao Lin\"\ndate: \"Oct 31 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  freeze: true  #will not re-render all items\n  message: false #no warning messages go out\n---\n\n\n# 1. Getting Started\n\n## 1.1 Installing and Loading R packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse,\n               knitr, kableExtra)\n```\n:::\n\n\n# 2. Preparing Data\n\n::: panel-tabset\n\n## Data import\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"data/mdata.rds\")\n```\n:::\n\n\n## Data Sampling \n\nCalibrating predictive models are computational intensive, especially random forest method is used. For quick prototyping, a 10% sample will be selected at random from the data by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nHDB_sample <- mdata %>%\n  sample_n(1500)\n```\n:::\n\n\n## Checking of overlapping point\n\n::: {.callout-warning}\nWhen using GWmodel to calibrate explanatory or predictive models, it is very important to ensure that there are no overlapping point features\n:::\n\nThe code chunk below is used to check if there are overlapping point features.\n\n\n::: {.cell}\n\n```{.r .cell-code}\noverlapping_points <- HDB_sample %>%\n  mutate(overlap = lengths(st_equals(., .)) > 1)\n```\n:::\n\n\n## Spatial jitter\n\nIn the code code chunk below, st_jitter() of sf package is used to move the point features by 5m to avoid overlapping point features.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHDB_sample <- HDB_sample %>%\n  st_jitter(amount = 5)\n```\n:::\n\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}