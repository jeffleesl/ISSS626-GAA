---
title: "Take Home Exercise 3a: Modelling Geography of Financial Inclusion with Geographically Weighted Methods"
author: "Jeffrey Lee Shao Lin"
date: "Oct 28 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  freeze: true  #will not re-render all items
  message: false #no warning messages go out
---

# 1. Introduction

According to [Wikipedia](https://en.wikipedia.org/wiki/Financial_inclusion), **financial inclusion** is the availability and equality of opportunities to access financial services. It refers to processes by which individuals and businesses can access appropriate, affordable, and timely financial products and services - which include banking, loan, equity, and insurance products. It provides paths to enhance inclusiveness in economic growth by enabling the unbanked population to access the means for savings, investment, and insurance towards improving household income and reducing income inequality.

# 2. The Task

In this take-home exercise, we are required to build an explanatory model to determine factors affecting [financial inclusion](https://www.bis.org/ifc/publ/ifcb47p.pdf) by using geographical weighted regression methods.

# 3. The Data

For the purpose of this take-home exercise, two data sets shall be used, they are:

-   [FinScope Uganda 2023](https://fsduganda.or.ug/data-sets-finscope-uganda-2023-survey-report/)

-   The district level boundary GIS data can be downloaded from [geoBoundaries](https://www.geoboundaries.org/) portal

# 4. Importing Packages

Before we start the exercise, we will need to import necessary R packages first. We will use the following packages:

-   [**olsrr**](https://olsrr.rsquaredacademy.com/) package for building OLS and performing diagnostics tests

-   [**GWmodel**](https://cran.r-project.org/web/packages/GWmodel/index.html) package for calibrating geographical weighted family of models

-   [**corrplot**](https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html) package for multivariate data visualisation and analysis

-   [sf](https://r-spatial.github.io/sf/index.html) package provides functions to manage, processing, and manipulate **Simple Features**, a formal geospatial data standard that specifies a storage and access model of spatial geometries such as points, lines, and polygons.

-   [**tmap**](https://cran.r-project.org/web/packages/tmap/index.html) which provides functions for plotting cartographic quality static point patterns maps or interactive maps by using [leaflet](https://leafletjs.com/) API.

    Use the code chunk below to install and launch the below R packages.

```{r}
pacman::p_load(olsrr, ggstatsplot, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)
```

# 5. Getting the Data Into R Environment

## 5.1 Importing geospatial data

The geospatial data used in this hands-on exercise is called geoBoundaries-UGA-ADM2. It is in ESRI shapefile format. The shapefile consists of Uganda district level boundaries. Polygon features are used to represent these geographic boundaries. The GIS data is in svy21 projected coordinates systems.

The code chunk below is used to import geoBoundaries-UGA-ADM2 shapefile by using st_read() of sf packages.

```{r}
# Load district level boundary GIS data

boundaries2 <- st_read(dsn = "data/rawdata/geoBoundaries-UGA-ADM2-all", 
                layer = "geoBoundaries-UGA-ADM2")
```

## 5.1.1 Updating CRS Information

Uganda is located in southeast Africa between 1º S and 4º N latitude, and between 30º E and 35º E longitude.

The code chunk below updates the newly imported mpsz with the correct ESPG code (i.e. 32736 or 21096).

```{r}
# Transform to the correct ESPG Code

boundaries <- st_transform(boundaries2, 32736)
```

```{r}
# Verify the newly transformed boundaries

st_crs(boundaries)
```

```{r}
st_bbox(boundaries) #view extent
```

```{r}
#| eval: false
tm_shape(boundaries) +
  tm_polygons()
```

![](images/clipboard-1138447629.png)

```{r}
## Convert to multipolygon to individual polygon
boundaries_sf <- boundaries %>% 
  st_cast("POLYGON") %>% 
  mutate(area = st_area(.))
```

```{r}
## Group by the unique name and select the largest polygon by area
boundaries_cleaned <- boundaries_sf %>% 
  group_by(shapeName) %>% 
  filter(area == max(area)) %>% 
  ungroup() %>% 
  select(-area) %>% 
  select(shapeName) %>% 
  rename(
  county_name = shapeName 
  )
```

```{r}
#| eval: false
tm_shape(boundaries_cleaned) +
  tm_polygons()
```

![](images/clipboard-367677706.png)

## 5.2 Importing the aspatial data, FinScope Uganda

The FinScope-2023_Dataset_Final is in csv file format. The codes chunk below uses read_csv() function of readr package to import FinScope-2023_Dataset_Final into R as a tibble data frame called uganda_data.

```{r}
uganda_data <- read_csv("data/rawdata/FinScope-2023_Dataset_Final.csv")
```

### 5.2.1 Variables to Consider for Financial Inclusion

Check the column names in the uganda_data to identify the right names.

```{r}
#| eval: false
colnames(uganda_data) # Displays all column names in the dataset
```

To determine factors affecting financial inclusion, consider including the following types of variables:

::: panel-tabset
## Demographic Variables

-   Age and Age Band

-   Gender

-   Education Level

-   Mobile User

## Economic Variables

-   Income Level

-   Employment Status

## Geographic Variables

-   Urban vs. rural status

## Access Variables

-   Distance to nearest bank or financial institution from Home (Commercial Bank, SACCO and Mobile Money)

-   Distance to nearest ATM from Home

## Financial Services Variables

-   Financial Advice

-   Save Money and the channel (Commerical Nank, SACCO and Mobile Money)

-   Last amount saved

-   Borrow Money and the channel (Commerical Nank, SACCO and Mobile Money)

-   Last amount borrowed

-   Last amount sent

-   Last amount received

## Other

-   Documentation for KYC (National Identification Card, Passport, Utilities and Pay Slip)

-   Self Sustaining
:::

#### 5.2.1.1 Rename the Variables

```{r}
uganda_data_rename <- uganda_data %>%
  select(-c(2:7, 9, 11:17, 20, 23:28, 30:34, 36:37, 40:43, 45:63, 65, 67:90, 93:94, 96, 98:167, 169:230, 232:234, 236:238, 240:241, 243:342, 344:364, 366:384, 386:438, 440:444, 448:473, 476:674, 677:679, 681:686)) %>% 
  rename(
    age_band = c1,
    gender = c2,
    education_level = c4,
    employment_status = c5,
    mobile_user = c7_1_1,
    national_ic_doc = c8_1a,
    passport_doc = c8_1d,
    utilities_bill_doc = c8_1e,
    pay_slip_doc = c8_1j,
    self_sustaining = e1_1,
    financial_advice = e3_1,
    save_money = f2_1,
    save_money_commercial_bank = f3_1_1,
    save_money_SACCO = f3_1_4,
    save_money_mobile_money = f3_1_6,
    last_amt_saved = f6_1,
    last_amt_borrowed = g3_3,
    borrow_money_commercial_bank = g6_1_1,
    borrow_money_SACCO = g6_1_5,
    borrow_money_mobile_money = g6_1_8,
    last_amt_sent = hpp3_2,
    last_amt_received = hpp6_2,
    own_insurance = j1,
    distance_commerical_bank = k1_1_1,
    distance_SACCOS = k1_1_7,
    distance_ATM = k1_1_8,
    distance_mobile_money = k1_1_9,
    savings_account = kcb1_1_1,
    joint_account = kcb1_1_2, 
    latitude = hh_gps_latitude,
    longitude = hh_gps_longitude,
    county_name = s1aq2b
  )
```

#### 5.2.1.1 Clean the Variables

```{r}
uganda_data_new <- uganda_data_rename %>%
  filter(!is.na(longitude) & longitude != "",
         !is.na(latitude) & latitude != "") %>%
  replace_na(list(
    save_money_commercial_bank = 2,
    save_money_SACCO = 2,
    save_money_mobile_money = 2,
    last_amt_saved = 9,
    last_amt_borrowed = 998,
    borrow_money_commercial_bank = 2,
    borrow_money_SACCO = 2,
    borrow_money_mobile_money = 2,
    last_amt_sent = 998,
    last_amt_received = 998
  )) %>%
  mutate(across(c(savings_account, joint_account), 
                ~ if_else(is.na(.) | . == "", 2, .)))
```

```{r}
head(uganda_data_new$longitude) #see the data in XCOORD column
```

```{r}
head(uganda_data_new$latitude) #see the data in YCOORD column
```

Next, summary() of base R is used to display the summary statistics of uganda_data_new tibble data frame.

```{r}
summary(uganda_data_new)
```

### 5.2.2 Convert to Percentage and Log-Transformations

This will help to perform the geographical weighted regression methods later.

```{r}
uganda_data_fin <- uganda_data_new %>%
  mutate(
    LOG_age_band = log(age_band),
    gender_pct = gender / 3176 * 100,
    LOG_education_level = log(education_level),
    LOG_employment_status = log(employment_status),
    mobile_user_pct = mobile_user / 3176 * 100,
    national_ic_doc_pct = national_ic_doc / 3176 * 100,
    passport_doc_pct = passport_doc / 3176 * 100,
    utilities_bill_do_pct = utilities_bill_doc / 3176 * 100,
    pay_slip_doc_pct = pay_slip_doc / 3176 * 100,
    self_sustaining_pct = self_sustaining / 3176 * 100,
    financial_advice_pct = financial_advice / 3176 * 100,
    save_money_pct = save_money / 3176 * 100,
    save_money_commercial_bank_pct = save_money_commercial_bank / 3176 * 100,
    save_money_SACCO_pct = save_money_SACCO / 3176 * 100,
    save_money_mobile_money_pct = save_money_mobile_money / 3176 * 100,
    LOG_last_amt_saved = log(last_amt_saved),
    LOG_last_amt_borrowed = log(last_amt_borrowed),
    borrow_money_commercial_bank_pct = borrow_money_commercial_bank / 3176 * 100,
    borrow_money_SACCO_pct = borrow_money_SACCO / 3176 * 100,
    borrow_money_mobile_money_pct = borrow_money_mobile_money / 3176 * 100,
    LOG_last_amt_sent = log(last_amt_sent),
    LOG_last_amt_received = log(last_amt_received),
    own_insurance_pct = own_insurance / 3176 * 100,
    LOG_distance_commerical_bank = log(distance_commerical_bank),
    LOG_distance_SACCOS = log(distance_SACCOS),
    LOG_distance_ATM = log(distance_ATM),
    LOG_distance_mobile_money = log(distance_mobile_money),
    savings_account_pct = savings_account / 3176 * 100,
    joint_account_pct = joint_account / 3176 * 100 
  )
```

## 5.3 Converting aspatial data frame into a sf object

Currently, the uganda_data_new tibble data frame is aspatial. We will convert it to a sf object. The code chunk below converts uganda_data_new data frame into a simple feature data frame by using st_as_sf() of sf packages.

```{r}
uganda_data.sf <- st_as_sf(uganda_data_fin,
                           coords = c("longitude", "latitude"),
                           crs=4326) %>%
  st_transform(crs=32736) 
```

Notice that st_transform() of sf package is used to convert the coordinates from wgs84 (i.e. crs:4326) to Arc 1960 (i.e. crs=32736).

Next, head() is used to list the content of uganda_data.sf object.

```{r}
head(uganda_data.sf)
```

Notice that the output is in point feature data frame.

# 6. Exploratory Data Analysis (EDA)

Use statistical graphics functions of ggplot2 package to perform EDA

## 6.1 EDA using statistical graphics

Plot the distribution of accounts by using appropriate Exploratory Data Analysis (EDA) as shown in the code chunk below.

```{r}
#| eval: false
ggplot(data=uganda_data.sf, aes(x=`savings_account_pct`)) +
  geom_histogram(bins=20, color="black", fill="light blue")
```

![](images/clipboard-1926521833.png)

```{r}
#| eval: false
ggplot(data=uganda_data.sf, aes(x=`save_money_mobile_money_pct`)) +
  geom_histogram(bins=20, color="#0B2130", fill="#AB88BA")
```

![](images/clipboard-2396109935.png)

## 6.2 Multiple Histogram Plots distribution of variables

Draw a few multiple histograms (also known as trellis plot) by using ggarrange() of ggpubr package to analysis the variables.

```{r}
#| eval: false
LOG_age_band <- ggplot(data=uganda_data.sf, aes(x= `LOG_age_band`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166")
  
gender_pct <- ggplot(data=uganda_data.sf, aes(x= `gender_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166")
  
LOG_education_level <- ggplot(data=uganda_data.sf, aes(x= `LOG_education_level`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166")
    
LOG_employment_status <- ggplot(data=uganda_data.sf, aes(x= `LOG_employment_status`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166")  
    
mobile_user_pct <- ggplot(data=uganda_data.sf, aes(x= `mobile_user_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166") 
    
national_ic_doc_pct <- ggplot(data=uganda_data.sf, aes(x= `national_ic_doc_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166") 

passport_doc_pct <- ggplot(data=uganda_data.sf, aes(x= `passport_doc_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166") 

utilities_bill_do_pct <- ggplot(data=uganda_data.sf, aes(x= `utilities_bill_do_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166") 
    
pay_slip_doc_pct <- ggplot(data=uganda_data.sf, aes(x= `pay_slip_doc_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166") 

self_sustaining_pct <- ggplot(data=uganda_data.sf, aes(x= `self_sustaining_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166") 

financial_advice_pct <- ggplot(data=uganda_data.sf, aes(x= `financial_advice_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166")    
    
save_money_pct <- ggplot(data=uganda_data.sf, aes(x= `save_money_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166")    
    
save_money_commercial_bank_pct <- ggplot(data=uganda_data.sf, aes(x= `save_money_commercial_bank_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166")   
    
save_money_SACCO_pct <- ggplot(data=uganda_data.sf, aes(x= `save_money_SACCO_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166") 

save_money_mobile_money_pct <- ggplot(data=uganda_data.sf, aes(x= `save_money_mobile_money_pct`)) + 
  geom_histogram(bins=20, color="black", fill="#FFC166") 

ggarrange(LOG_age_band, gender_pct, LOG_education_level, LOG_employment_status, 
          mobile_user_pct, national_ic_doc_pct, passport_doc_pct, utilities_bill_do_pct, 
          pay_slip_doc_pct, self_sustaining_pct, financial_advice_pct, save_money_pct, 
          save_money_commercial_bank_pct, save_money_SACCO_pct, save_money_mobile_money_pct, 
          ncol = 3, nrow = 5)
```

![](images/clipboard-1805352332.png){width="914"}

```{r}
#| eval: false
LOG_last_amt_saved <- ggplot(data=uganda_data.sf, aes(x= `LOG_last_amt_saved`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F") 

LOG_last_amt_borrowed <- ggplot(data=uganda_data.sf, aes(x= `LOG_last_amt_borrowed`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

borrow_money_commercial_bank_pct <- ggplot(data=uganda_data.sf, aes(x= `borrow_money_commercial_bank_pct`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")
    
borrow_money_SACCO_pct <- ggplot(data=uganda_data.sf, aes(x= `borrow_money_SACCO_pct`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

borrow_money_mobile_money_pct <- ggplot(data=uganda_data.sf, aes(x= `borrow_money_mobile_money_pct`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

LOG_last_amt_sent <- ggplot(data=uganda_data.sf, aes(x= `LOG_last_amt_sent`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

LOG_last_amt_received <- ggplot(data=uganda_data.sf, aes(x= `LOG_last_amt_received`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

own_insurance_pct <- ggplot(data=uganda_data.sf, aes(x= `own_insurance_pct`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

LOG_distance_commerical_bank <- ggplot(data=uganda_data.sf, aes(x= `LOG_distance_commerical_bank`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

LOG_distance_SACCOS <- ggplot(data=uganda_data.sf, aes(x= `LOG_distance_SACCOS`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

LOG_distance_ATM <- ggplot(data=uganda_data.sf, aes(x= `LOG_distance_ATM`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

LOG_distance_mobile_money <- ggplot(data=uganda_data.sf, aes(x= `LOG_distance_mobile_money`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

savings_account_pct <- ggplot(data=uganda_data.sf, aes(x= `savings_account_pct`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

joint_account_pct <- ggplot(data=uganda_data.sf, aes(x= `joint_account_pct`)) + 
  geom_histogram(bins=20, color="#0A1E0F", fill="#A9CB9F")

ggarrange(LOG_last_amt_saved, LOG_last_amt_borrowed, borrow_money_commercial_bank_pct, borrow_money_SACCO_pct, 
          borrow_money_mobile_money_pct, LOG_last_amt_sent, LOG_last_amt_received, own_insurance_pct, 
          LOG_distance_commerical_bank, LOG_distance_SACCOS, LOG_distance_ATM, LOG_distance_mobile_money, 
          savings_account_pct, joint_account_pct,
          ncol = 4, nrow = 4)
```

![](images/clipboard-3608888018.png){width="738"}The plots show that the majority of people lack insurance, savings, and joint accounts. Many respondents also feel they do not have enough money and would like to seek financial advice. Additionally, a large portion of those surveyed report that bank branches and ATMs are located relatively far from their homes.

# 7. Correlation Analysis - ggstatsplot methods

```{r}
#| eval: false
ggcorrmat(uganda_data_fin[, 47:59])
```

![](images/clipboard-4134350256.png)

# 8. Hedonic Pricing Modelling in R

## 8.1 Simple Linear Regression Method

Build a simple linear regression model by using savings_account_pct as the dependent variable and LOG_distance_commerical_bank as the independent variable.

```{r}
uganda.slr <- lm(formula=savings_account_pct ~ LOG_distance_commerical_bank, data = uganda_data.sf)
```

```{r}
summary(uganda.slr)
```

The output report reveals that the SELLING_PRICE can be explained by using the formula:

```         
      *y = 0.0596595 + 0.0019882x1*
```

The R-squared of 0.01845 reveals that the simple regression model built is able to explain about 1.845% of the percentage of having savings account.

Since p-value is way bigger than 0.0001, we will not reject the null hypothesis that mean is not a good estimator of percentage of having savings account.

## 8.2 Multiple Linear Regression Method

The code chunk below using lm() to calibrate the multiple linear regression model.

```{r}

sa_mlr <- lm(formula = savings_account_pct ~ LOG_age_band + gender_pct + LOG_education_level + LOG_employment_status + mobile_user_pct + national_ic_doc_pct + passport_doc_pct + utilities_bill_do_pct + pay_slip_doc_pct + self_sustaining_pct + financial_advice_pct +save_money_pct + save_money_commercial_bank_pct + save_money_SACCO_pct + save_money_mobile_money_pct + LOG_last_amt_saved + LOG_last_amt_borrowed + borrow_money_commercial_bank_pct + borrow_money_SACCO_pct + borrow_money_mobile_money_pct + LOG_last_amt_sent + LOG_last_amt_received + LOG_distance_commerical_bank + LOG_distance_SACCOS + LOG_distance_ATM + LOG_distance_mobile_money + joint_account_pct, 
                data=uganda_data.sf)
summary(sa_mlr)
```

The Multiple R-squared is 0.3177, suggesting that around 31.7% of the variability in savings_account_pct is explained by the predictor variables in the model. The Adjusted R-squared is 0.3118, which accounts for the number of predictors, confirming that the model provides a modest fit.

Whereas, The F-statistic of 54.28 with a very low p-value (\< 2.2e-16) indicates that the model is statistically significant overall, meaning at least one of the predictors significantly impacts the savings_account_pct.

### Key Predictors

The coefficients tell us the direction and strength of each predictor’s relationship with `savings_account_pct`. Here are some significant predictors:

1.  **Passport Documentation** (`passport_doc_pct`, p = 0.00828):

    -   Positive relationship (Estimate = 0.0409): A higher percentage of individuals with passport documentation is associated with an increase in `savings_account_pct`.

2.  **Payslip Documentation** (`pay_slip_doc_pct`, p = 0.00189):

    -   Positive relationship (Estimate = 0.0497): A higher percentage of individuals with pay slip documentation correlates with a higher percentage of savings accounts. This might suggest that stable income documentation positively influences savings account ownership.

3.  **Self-Sustaining Percentage** (`self_sustaining_pct`, p = 0.00341):

    -   Positive relationship (Estimate = 0.0239): This suggests that communities with higher self-sustaining individuals are more likely to have savings accounts.

4.  **Saving with Commercial Banks and SACCOs**:

    -   **Save Money\
        **(`save_money_pct,`p = 5.04e-08, Estimate = -0.06590): has a negative coefficient, implying that higher rates of people saving money in general are associated with a lower savings account percentage, possibly indicating other informal

    -   **Save Money with Commercial Bank Percentage** (`save_money_commercial_bank_pct`, p \< 2e-16, Estimate = 0.1816): Strong positive relationship, indicating that those who save with commercial banks are highly likely to have a savings account.

    -   **Save Money with SACCO Percentage** (`save_money_SACCO_pct`, p \< 2e-16, Estimate = 0.2195): Also a strong positive relationship, reinforcing that participation in SACCOs (Savings and Credit Cooperative Organizations) is a strong indicator of savings account ownership.

5.  **Borrowing from Commercial Banks and SACCOs**:

    -   **Borrow Money from Commercial Bank Percentage** (`borrow_money_commercial_bank_pct`, p = 9.03e-05, Estimate = 0.0893): Indicates a positive association with savings account ownership.

    -   **Borrow Money from SACCO Percentage** (`borrow_money_SACCO_pct`, p = 7.23e-06, Estimate = 0.0912): Similar positive relationship, suggesting that access to borrowing services is linked to having savings accounts.

6.  **Distance to Commercial Bank** (`LOG_distance_commercial_bank`, p = 0.00643):

    -   Positive relationship (Estimate = 0.0013): As the log-distance to commercial banks increases, there’s a small but significant increase in the savings account percentage, which might suggest limited access drives individuals to hold savings accounts if they are already banked.

7.  **Last Amount Saved** (`LOG_last_amt_saved`, p = 0.00197):

    -   Positive relationship (Estimate = 0.00054): The log of the last amount saved has a slight positive effect on savings account ownership, suggesting that recent saving activity is associated with having a savings account.

### Non-significant Predictors

Some predictors, such as `gender_pct`, `LOG_education_level`, and `LOG_age_band`, show non-significant effects (high p-values). This may suggest that demographic factors like age, gender, and education do not directly impact the likelihood of savings account ownership in this context.

-   Documentation (like passports and pay slips) and income stability appear to be important indicators of savings account ownership.

-   Engagement with formal and semi-formal financial services, such as commercial banks and SACCOs, positively influences the likelihood of having a savings account.

-   Access to borrowing services is also positively linked to savings account ownership, suggesting that people who have access to credit may be more financially integrated.

-   Distance to financial services can have a minor influence, suggesting a possible need for financial services closer to communities to further increase account ownership rates.

In conclusion, the model suggests that factors related to financial habits (saving and borrowing with formal institutions) and access to financial documentation have significant impacts on the likelihood of savings account ownership in Uganda.

# 9. Preparing Publication Quality Table: olsrr method

With reference to the report above, it is clear that not all the independent variables are statistically significant. We will revised the model by removing those variables which are not statistically significant.

Now, we are ready to calibrate the revised model by using the code chunk below.

```{r}

sa_mlr1 <- lm(formula = savings_account_pct ~ passport_doc_pct + pay_slip_doc_pct  + self_sustaining_pct + save_money_pct + save_money_commercial_bank_pct + save_money_SACCO_pct + LOG_last_amt_saved + borrow_money_commercial_bank_pct + borrow_money_SACCO_pct + borrow_money_mobile_money_pct + LOG_distance_commerical_bank, 
                data=uganda_data.sf)
ols_regress(sa_mlr1)
```

After added the independent variables which are statistically significant, there are no improvement in the R-Squared and Adjusted R-Squared. Furthermore, Predicted R-Squared (of 0.298) indicating that the model may perform slightly less effectively on unseen data. Both RMSE (of 0.005) and MAE (of 0.002) giving an idea of the typical error magnitude. However, AIC and SIC show lower values indicates a better fit given model complexity.

